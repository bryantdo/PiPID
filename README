This package provides an object-oriented interface for temperature
monitoring and PID_ control.  The idea is that experimentalists
interested in temperature controlled experiments should not need to
learn the inner workings of their PID controller before they can
perform simple temperature control tasks.

Module structure
================

This package provides both a high level controller that uses
per-device backend drivers.  The controller handles auto-tuning the
PID feedback parameters and changing system temperatures, while the
backends communicate setpoint changes, temperature read requests,
etc. to the temperature control device.

Backends
--------

The only physicsal backend that is supported at the moment is a Melcor
Series MTCA Thermoelectric Cooler Controller, which we communicate
with via Modbus_ packets over a `serial port`_.  That's all I needed
for my experiments, but I tried to write a framework that was flexible
enough to swap in other backends.  By subclassing `Backend` for your
particular device, you can take advantage of the high-level
`Controller` code that's already written.

Melcor
~~~~~~

Companies don't stay in business forever, but lab equipment does ;).
Our controller is still going strong since 1999, but Melcor has moved
around.  According to their `2005 announcement`__ the Laird Group PLC
purchased Melcor from Fedders Corporation, and by 2009 (according to
the `Internet Archive Wayback Machine`__) they phased out the old
website at `melcor.com <http://melcor.com>`_ in favor of `their own
thermal site`__, and it looks like there is no longer support for the
older MTCA controllers.  There seem to be a number of them on eBay_
though ;).

__ `Laird announcement`_
__ wayback_
__ `Laird thermal`_

TestBackend
~~~~~~~~~~~

To get a feel for driving a PID system, check out the `TestBackend`.
For example, you can experiment with different feedback terms and dead
times to understand why you're getting instability or other control
effects.  Here's an example that shows a reasonable approach with a
bit of integrator overshoot::

  >>> from tempcontrol.backend.test import TestBackend
  >>> from time import sleep
  >>> from matplotlib import pyplot
  >>> from numpy import loadtxt
  >>> log_file = 'pid.log'
  >>> log_stream = open('pid.log', 'w')
  >>> b = TestBackend(log_stream=log_stream)
  >>> b.set_max_current(0.6)
  >>> b.set_heating_gains(propband=2, integral=.1)
  >>> b.set_cooling_gains(propband=2, integral=.1)
  >>> b.set_setpoint(25)
  >>> sleep(120)
  >>> t.cleanup()
  >>> log_stream.close()
  >>> header = open(log_file, 'r').readline()
  >>> label = header.strip('#\n').split('\t')
  >>> data = loadtxt('pid.log')
  >>> pyplot.hold(True)
  >>> for i in range(1, len(label)):
  ...     if i in [1, 3, 5]:
  ...         if i:
  ...             pyplot.legend(loc='best')  # add legend to previous subplot
  ...         pyplot.subplot(3, 1, (i-1)/2 + 1)
  ...     pyplot.plot(data[:,0], data[:,i], '.', label=label[i])
  >>> pyplot.legend(loc='best')
  >>> pyplot.show()

Of course, you can use whatever plotting program you like to graph the
values stored to `pid.log`.  Matplotlib_ and NumPy_ are just
convenient Python-based packages.

Installation
============

Packages
--------

Gentoo
~~~~~~

I've packaged `tempcontrol` for Gentoo_.  You need layman_ and my `wtk
overlay`_.  Install with::

    # emerge -av app-portage/layman
    # layman --add wtk
    # emerge -av dev-python/tempcontrol

Dependencies
------------

If you're installing by hand or packaging `tempcontrol` for another
distribution, you'll need the following dependencies:

=========  =====================  ================  ==========================
Package    Purpose                Debian_           Gentoo_
=========  =====================  ================  ==========================
pymodbus_  Modbus stack           python-modbus     dev-python/twisted
pySerial_  serial comminication   python-serial     dev-python/pyserial
nose_      testing                python-nose       dev-python/nose
=========  =====================  ================  ==========================

Actually, `pymodbus` may (depending on your packaging system) depend
on `pySerial`_ via Twisted_, so `pymodbus` alone may be enough to get
you going.

The Debian package for `pymodbus` has not been accepted yet.  `Debian
bug #578120`__ tracks the progress of the prospective package, but it
seems to have stalled out at the moment.

__ db578120_

Installing by hand
------------------

Tempcontrol is available as a Git_ repository::

    $ git clone http://www.physics.drexel.edu/~wking/code/git/tempcontrol.git

See the homepage_ for details.  To install the checkout, run the
standard::

    $ python setup.py install

Usage
=====

See the examples in the `examples` directory.

Testing
=======

Run the test suite with::

    $ nosetests --with-doctest --doctest-tests tempcontrol

Note that you should have your temperature control device connected to
your computer before running this command, as backend tests require a
connected backend.

Licence
=======

This project is distributed under the `GNU General Public License
Version 3`_ or greater.

Author
======

W. Trevor King
wking@drexel.edu
Copyright 2008-2011


.. _PID: http://en.wikipedia.org/wiki/PID_controller
.. _Modbus: http://en.wikipedia.org/wiki/Modbus
.. _serial port: http://en.wikipedia.org/wiki/Serial_port
.. _Matplotlib: http://matplotlib.sourceforge.net/
.. _NumPy: http://numpy.scipy.org/
.. _Laird announcement: http://www.lairdtech.com/NewsItem.aspx?id=953
.. _wayback: http://web.archive.org/web/20090204201524/http://melcor.com/
.. _Laird thermal: http://lairdtech.thomasnet.com/category/thermal-management-solutions/
.. _eBay: http://www.ebay.com/
.. _layman: http://layman.sourceforge.net/
.. _wtk overlay:
     http://www.physics.drexel.edu/~wking/unfolding-disasters/posts/Gentoo_overlay
.. _Debian: http://www.debian.org/
.. _Gentoo: http://www.gentoo.org/
.. _pymodbus: http://code.google.com/p/pymodbus/
.. _pySerial: http://pyserial.sourceforge.net/
.. _Twisted: http://twistedmatrix.com/trac/
.. _db578120: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=578120
.. _nose: http://somethingaboutorange.com/mrl/projects/nose/
.. _Git: http://git-scm.com/
.. _homepage:
     http://www.physics.drexel.edu/~wking/unfolding-disasters/posts/tempcontrol/
.. _GNU General Public License Version 3: http://www.gnu.org/licenses/gpl.txt
